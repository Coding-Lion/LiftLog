<div class="session">
    @foreach (var (exercise, i) in WorkoutSession.WeightedExercises.IndexedTuples())
    {
        <Card>
            <WeightedExercise @key=i Exercise="exercise" ToStartNext=@(WorkoutSession.NextExercise == exercise) CycleRepCountForSet=CycleRepCountForExerciseSet(i) />
        </Card>
    }

    <AppButton onclick=@(() => {})>Finish</AppButton>

    @if (WorkoutSession.NextExercise is not null && WorkoutSession.LastExercise?.LastSetTime is not null)
    {
        var lastSetFailed = WorkoutSession.LastExercise.SetRepCounts.Last(x => x is not null) < WorkoutSession.LastExercise.PlanExercise.RepsPerSet;

        <RestTimer Rest=WorkoutSession.NextExercise.PlanExercise.RestBetweenSets StartTime=WorkoutSession.LastExercise.LastSetTime.Value Failed=lastSetFailed />
    }
</div>
@code {
    [Parameter]
    public WorkoutDay WorkoutSession { get; set; } = null!;

    [Parameter]
    public Action<int, int> CycleRepcountForExercise { get; set; } = null!;

    private Action<int> CycleRepCountForExerciseSet(int exerciseIndex)
        => (int set) => CycleRepcountForExercise(exerciseIndex, set);
}
