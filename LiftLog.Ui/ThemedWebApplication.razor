@implements IDisposable
@using LiftLog.Ui.Services
@using MaterialColorUtilities.Utils
@inject IThemeProvider ThemeProvider
<LiftLog.Ui.WebApplication/>

<style>
    :root{
        --color-primary: @GetColorStr(ThemeProvider.GetColorScheme().Primary);
        --color-on-primary: @GetColorStr(ThemeProvider.GetColorScheme().OnPrimary);
        --color-secondary: @GetColorStr(ThemeProvider.GetColorScheme().Secondary);
        --color-on-secondary: @GetColorStr(ThemeProvider.GetColorScheme().OnSecondary);
        --color-secondary-container: @GetColorStr(ThemeProvider.GetColorScheme().SecondaryContainer);
        --color-on-secondary-container: @GetColorStr(ThemeProvider.GetColorScheme().OnSecondaryContainer);
        --color-tertiary: @GetColorStr(ThemeProvider.GetColorScheme().Tertiary);
        --color-on-tertiary: @GetColorStr(ThemeProvider.GetColorScheme().OnTertiary);
        --color-tertiary-container: @GetColorStr(ThemeProvider.GetColorScheme().TertiaryContainer);
        --color-on-tertiary-container: @GetColorStr(ThemeProvider.GetColorScheme().OnTertiaryContainer);
        --color-background: @GetColorStr(ThemeProvider.GetColorScheme().Background);
        --color-on-background: @GetColorStr(ThemeProvider.GetColorScheme().OnBackground);
        --color-surface: @GetColorStr(ThemeProvider.GetColorScheme().Surface);
        --color-surface-container-highest: @GetColorStr(ThemeProvider.GetColorScheme().SurfaceContainerHighest);
        --color-on-surface: @GetColorStr(ThemeProvider.GetColorScheme().OnSurface);
        --color-on-surface-variant: @GetColorStr(ThemeProvider.GetColorScheme().OnSurfaceVariant);
        --color-inverse-surface: @GetColorStr(ThemeProvider.GetColorScheme().InverseSurface);
        --color-inverse-on-surface: @GetColorStr(ThemeProvider.GetColorScheme().InverseOnSurface);
        --color-surface-container: @GetColorStr(ThemeProvider.GetColorScheme().SurfaceContainer);
        --color-surface-container-high: @GetColorStr(ThemeProvider.GetColorScheme().SurfaceContainerHigh);
        --color-surface-container-low: @GetColorStr(ThemeProvider.GetColorScheme().SurfaceContainerLow);
        --color-outline: @GetColorStr(ThemeProvider.GetColorScheme().Outline);
        --color-outline-variant: @GetColorStr(ThemeProvider.GetColorScheme().OutlineVariant);
;
        --md-sys-color-primary: rgb(@GetColorStr(ThemeProvider.GetColorScheme().Primary));
        --md-sys-color-on-primary: rgb(@GetColorStr(ThemeProvider.GetColorScheme().OnPrimary));
        --md-sys-color-primary-container: rgb(@GetColorStr(ThemeProvider.GetColorScheme().PrimaryContainer));
        --md-sys-color-on-primary-container: rgb(@GetColorStr(ThemeProvider.GetColorScheme().OnPrimaryContainer));
        --md-sys-color-secondary: rgb(@GetColorStr(ThemeProvider.GetColorScheme().Secondary));
        --md-sys-color-on-secondary: rgb(@GetColorStr(ThemeProvider.GetColorScheme().OnSecondary));
        --md-sys-color-secondary-container: rgb(@GetColorStr(ThemeProvider.GetColorScheme().SecondaryContainer));
        --md-sys-color-on-secondary-container: rgb(@GetColorStr(ThemeProvider.GetColorScheme().OnSecondaryContainer));
        --md-sys-color-tertiary: rgb(@GetColorStr(ThemeProvider.GetColorScheme().Tertiary));
        --md-sys-color-on-tertiary: rgb(@GetColorStr(ThemeProvider.GetColorScheme().OnTertiary));
        --md-sys-color-tertiary-container: rgb(@GetColorStr(ThemeProvider.GetColorScheme().TertiaryContainer));
        --md-sys-color-on-tertiary-container: rgb(@GetColorStr(ThemeProvider.GetColorScheme().OnTertiaryContainer));
        --md-sys-color-error: rgb(@GetColorStr(ThemeProvider.GetColorScheme().Error));
        --md-sys-color-on-error: rgb(@GetColorStr(ThemeProvider.GetColorScheme().OnError));
        --md-sys-color-error-container: rgb(@GetColorStr(ThemeProvider.GetColorScheme().ErrorContainer));
        --md-sys-color-on-error-container: rgb(@GetColorStr(ThemeProvider.GetColorScheme().OnErrorContainer));
        --md-sys-color-background: rgb(@GetColorStr(ThemeProvider.GetColorScheme().Background));
        --md-sys-color-on-background: rgb(@GetColorStr(ThemeProvider.GetColorScheme().OnBackground));
        --md-sys-color-surface: rgb(@GetColorStr(ThemeProvider.GetColorScheme().Surface));
        --md-sys-color-on-surface: rgb(@GetColorStr(ThemeProvider.GetColorScheme().OnSurface));
        --md-sys-color-surface-variant: rgb(@GetColorStr(ThemeProvider.GetColorScheme().SurfaceVariant));
        --md-sys-color-on-surface-variant: rgb(@GetColorStr(ThemeProvider.GetColorScheme().OnSurfaceVariant));
        --md-sys-color-outline: rgb(@GetColorStr(ThemeProvider.GetColorScheme().Outline));
        --md-sys-color-outline-variant: rgb(@GetColorStr(ThemeProvider.GetColorScheme().OutlineVariant));
        --md-sys-color-inverse-surface: rgb(@GetColorStr(ThemeProvider.GetColorScheme().InverseSurface));
        --md-sys-color-on-inverse-surface: rgb(@GetColorStr(ThemeProvider.GetColorScheme().InverseOnSurface));
        --md-sys-color-inverse-primary: rgb(@GetColorStr(ThemeProvider.GetColorScheme().InversePrimary));
        --md-sys-color-shadow: rgb(@GetColorStr(ThemeProvider.GetColorScheme().Shadow));
        --md-sys-color-surface-tint: rgb(@GetColorStr(ThemeProvider.GetColorScheme().SurfaceBright));
        --md-sys-color-surface-container-lowest: rgb(@GetColorStr(ThemeProvider.GetColorScheme().SurfaceContainerLowest));
        --md-sys-color-surface-container-low: rgb(@GetColorStr(ThemeProvider.GetColorScheme().SurfaceContainerLow));
        --md-sys-color-surface-container: rgb(@GetColorStr(ThemeProvider.GetColorScheme().SurfaceContainer));
        --md-sys-color-surface-container-high: rgb(@GetColorStr(ThemeProvider.GetColorScheme().SurfaceContainerHigh));
        --md-sys-color-surface-container-highest: rgb(@GetColorStr(ThemeProvider.GetColorScheme().SurfaceContainerHighest));
        --md-sys-color-surface-dim: rgb(@GetColorStr(ThemeProvider.GetColorScheme().SurfaceDim));
        --md-sys-color-shadow: rgb(@GetColorStr(ThemeProvider.GetColorScheme().Shadow));
        --md-outlined-button-label-text-type: 'Roboto Flex';

        --mdc-theme-primary: rgb(@GetColorStr(ThemeProvider.GetColorScheme().Primary));
        --mdc-theme-on-primary: rgb(@GetColorStr(ThemeProvider.GetColorScheme().OnPrimary));
        --mdc-theme-primary-container: rgb(@GetColorStr(ThemeProvider.GetColorScheme().PrimaryContainer));
        --mdc-theme-on-primary-container: rgb(@GetColorStr(ThemeProvider.GetColorScheme().OnPrimaryContainer));
        --mdc-theme-secondary: rgb(@GetColorStr(ThemeProvider.GetColorScheme().Secondary));
        --mdc-theme-on-secondary: rgb(@GetColorStr(ThemeProvider.GetColorScheme().OnSecondary));
        --mdc-theme-secondary-container: rgb(@GetColorStr(ThemeProvider.GetColorScheme().SecondaryContainer));
        --mdc-theme-on-secondary-container: rgb(@GetColorStr(ThemeProvider.GetColorScheme().OnSecondaryContainer));
        --mdc-theme-tertiary: rgb(@GetColorStr(ThemeProvider.GetColorScheme().Tertiary));
        --mdc-theme-on-tertiary: rgb(@GetColorStr(ThemeProvider.GetColorScheme().OnTertiary));
        --mdc-theme-tertiary-container: rgb(@GetColorStr(ThemeProvider.GetColorScheme().TertiaryContainer));
        --mdc-theme-on-tertiary-container: rgb(@GetColorStr(ThemeProvider.GetColorScheme().OnTertiaryContainer));
        --mdc-theme-error: rgb(@GetColorStr(ThemeProvider.GetColorScheme().Error));
        --mdc-theme-on-error: rgb(@GetColorStr(ThemeProvider.GetColorScheme().OnError));
        --mdc-theme-error-container: rgb(@GetColorStr(ThemeProvider.GetColorScheme().ErrorContainer));
        --mdc-theme-on-error-container: rgb(@GetColorStr(ThemeProvider.GetColorScheme().OnErrorContainer));
        --mdc-theme-background: rgb(@GetColorStr(ThemeProvider.GetColorScheme().Background));
        --mdc-theme-on-background: rgb(@GetColorStr(ThemeProvider.GetColorScheme().OnBackground));
        --mdc-theme-surface: rgb(@GetColorStr(ThemeProvider.GetColorScheme().Surface));
        --mdc-theme-on-surface: rgb(@GetColorStr(ThemeProvider.GetColorScheme().OnSurface));
        --mdc-theme-surface-variant: rgb(@GetColorStr(ThemeProvider.GetColorScheme().SurfaceVariant));
        --mdc-theme-on-surface-variant: rgb(@GetColorStr(ThemeProvider.GetColorScheme().OnSurfaceVariant));
        --mdc-theme-outline: rgb(@GetColorStr(ThemeProvider.GetColorScheme().Outline));
        --mdc-theme-outline-variant: rgb(@GetColorStr(ThemeProvider.GetColorScheme().OutlineVariant));
        --mdc-theme-inverse-surface: rgb(@GetColorStr(ThemeProvider.GetColorScheme().InverseSurface));
        --mdc-theme-on-inverse-surface: rgb(@GetColorStr(ThemeProvider.GetColorScheme().InverseOnSurface));
        --mdc-theme-inverse-primary: rgb(@GetColorStr(ThemeProvider.GetColorScheme().InversePrimary));
        --mdc-theme-shadow: rgb(@GetColorStr(ThemeProvider.GetColorScheme().Shadow));
        --mdc-theme-surface-tint: rgb(@GetColorStr(ThemeProvider.GetColorScheme().SurfaceBright));
        --mdc-theme-surface-container-lowest: rgb(@GetColorStr(ThemeProvider.GetColorScheme().SurfaceContainerLowest));
        --mdc-theme-surface-container-low: rgb(@GetColorStr(ThemeProvider.GetColorScheme().SurfaceContainerLow));
        --mdc-theme-surface-container: rgb(@GetColorStr(ThemeProvider.GetColorScheme().SurfaceContainer));
        --mdc-theme-surface-container-high: rgb(@GetColorStr(ThemeProvider.GetColorScheme().SurfaceContainerHigh));
        --mdc-theme-surface-container-highest: rgb(@GetColorStr(ThemeProvider.GetColorScheme().SurfaceContainerHighest));
        --mdc-theme-surface-dim: rgb(@GetColorStr(ThemeProvider.GetColorScheme().SurfaceDim));
        --mdc-theme-shadow: rgb(@GetColorStr(ThemeProvider.GetColorScheme().Shadow));
    }
</style>

@code {

    string GetColorStr(uint color) => $"{ColorUtils.RedFromArgb(color)} {ColorUtils.GreenFromArgb(color)} {ColorUtils.BlueFromArgb(color)}";

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            ThemeProvider.SeedChanged += HandleThemeChange;
        }
        base.OnAfterRender(firstRender);
    }

    public void Dispose()
    {
        ThemeProvider.SeedChanged -= HandleThemeChange;
    }

    private void HandleThemeChange(object? sender, object? args)
    {
        InvokeAsync(StateHasChanged);
    }

}
