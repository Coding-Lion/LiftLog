@inject IStringSharer StringSharer
@inject IState<FeedState> FeedState

@if(FeedState.Value.Identity is not null){
    <TextField Value="@GetShareUrl()" label="Share Link" readonly="readonly" OnClick="HandleShareUrlClick" />
    <span class="text-sm text-on-surface">Only those with the link can see what you've shared.</span>
}
@code {

    private string? GetShareUrl()
    {
        if(FeedState.Value.Identity == null)
            return null;
        var identity = FeedState.Value.Identity;
        return GetShareUrl(identity.Id, identity.RsaKeyPair.PublicKey, identity.Name);
    }

    private async Task HandleShareUrlClick()
    {
        var shareUrl = GetShareUrl();
        if(shareUrl == null)
            return;
        await StringSharer.ShareAsync(shareUrl);
    }

    public static string GetShareUrl(Guid id, RsaPublicKey publicKey, string? name) =>
#if DEBUG
        $"https://0.0.0.0:5001/feed/share?pub={publicKey.SpkiPublicKeyBytes.ToUrlSafeHexString()}&id={id}{(name is null ? "" : $"&name={name}")}";
#else
        $"https://app.liftlog.online/feed/share?pub={publicKey.SpkiPublicKeyBytes.ToUrlSafeHexString()}&id={id}{(name is null ? "" : $"&name={name}")}";
#endif
}
