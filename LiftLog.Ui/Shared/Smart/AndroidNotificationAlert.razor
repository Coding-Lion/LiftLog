
@inherits Fluxor.Blazor.Web.Components.FluxorComponent
@inject IDispatcher Dispatcher

@inject IState<SettingsState> SettingsState


@inject IDeviceService DeviceService

<ConfirmationDialog @ref="androidNotificationDialog"
    OkText="Grant"
    OnOk="DeviceService.RequestExactNotificationPermission"
    CancelText="Disable Notifications"
    OnCancel="DisableNotifications"
    SectionName="AndroidNotificationDialog">
    <Headline>Enable Notifications?</Headline>
    <TextContent>Newer Android devices require an additional permission to ensure that rest notifications are delivered on time.
        Without this permission, they will arrive late and largely be useless.
        On the next screen, please grant LiftLog the permission.</TextContent>
</ConfirmationDialog>

@code
{

    private ConfirmationDialog? androidNotificationDialog;

    protected override void OnAfterRender(bool firstRender)
    {
        if(DeviceService.GetDeviceType() == DeviceType.Android
            && SettingsState.Value.RestNotifications
            && !DeviceService.CanScheduleExactNotifications())
        {
            androidNotificationDialog?.Open();
        }
        base.OnAfterRender(firstRender);
    }

    private void DisableNotifications()
    {
        Dispatcher.Dispatch(new SetRestNotificationsAction(false));
    }
}
