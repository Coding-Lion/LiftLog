@typeparam TItem
<div @attributes="AdditionalAttributes" class=" @(AdditionalAttributes?.GetValueOrDefault("class")) flex flex-col @VerticalPaddingClass itemlist">
    @for (var i = 0; i < Items.Count; i++)
    {
        <div class="text-on-surface">
            @ChildContent?.Invoke(Items[i])
        </div>
        @if(i < Items.Count - 1){
            <md-divider></md-divider>
        }
    }
</div>

@code
{
    [EditorRequired] [Parameter] public IReadOnlyList<TItem> Items { get; set; } = null!;

    [Parameter] public RenderFragment<TItem>? ChildContent { get; set; } = null!;

    [Parameter] public bool VerticalPadding { get; set; } = true;

    [Parameter(CaptureUnmatchedValues = true)]
    public Dictionary<string, object>? AdditionalAttributes { get; set; }

    private string VerticalPaddingClass => VerticalPadding ? "py-2" : "";
}
