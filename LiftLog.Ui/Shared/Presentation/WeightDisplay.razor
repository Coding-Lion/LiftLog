<div>
    <AppButton Type="AppButtonType.OutlineSecondary" OnClick="OnOpenClick">
        <WeightFormat Kilograms="Exercise.Kilograms"/>
    </AppButton>
</div>
    <Dialog
        @ref="dialog"
        style="--md-dialog-container-max-block-size: 500px;"
    >
        <span slot="header">Weight</span>
        <div class="flex flex-col gap-2 p-1">
            <InputNumber @bind-Value=EditorWeight step=2.5 />
            <div class="flex justify-between">
                <AppButton Type=AppButtonType.OutlineSecondary OnClick=OnWeightDecrementClick><WeightFormat Kilograms="-Increment"  /></AppButton>
                <AppButton Type=AppButtonType.OutlineSecondary OnClick=OnWeightIncrementClick>+<WeightFormat Kilograms="Increment" /></AppButton>
            </div>
        </div>
        <div slot="footer" class="flex gap-1" >
            <AppButton dialog-action="close" OnClick=OnCloseClick Type=AppButtonType.Text>Close</AppButton>
            <AppButton dialog-action="save" dialog-focus OnClick=OnSaveClick Type=AppButtonType.Text>Save</AppButton>
        </div>
    </Dialog>

@code {

    private Dialog? dialog;

    [EditorRequired]
    [Parameter]
    public RecordedExercise Exercise { get; set; } = null!;

    [EditorRequired]
    [Parameter]
    public Action<decimal> UpdateWeightForExercise { get; set; } = null!;

    private decimal Increment => Exercise.Blueprint.KilogramsIncreaseOnSuccess == 0 ? 2.5m : Exercise.Blueprint.KilogramsIncreaseOnSuccess;

    private decimal EditorWeight { get; set; }

    private void OnOpenClick()
    {
        EditorWeight = Exercise.Kilograms;
        dialog?.Open();
    }

    private void OnCloseClick()
    {
        dialog?.Close();
    }

    private void OnSaveClick()
    {
        UpdateWeightForExercise(EditorWeight);
        dialog?.Close();
    }

    private void OnWeightIncrementClick()
    {
        EditorWeight += Increment;
    }

    private void OnWeightDecrementClick()
    {
        EditorWeight -= Increment;
    }
}
