<div>
    <AppButton Type="AppButtonType.OutlineSecondary" OnClick="OnOpenClick">
        <WeightFormat Kilograms="Exercise.Kilograms"/>
    </AppButton>
</div>
<div class="weight-display-popup @(PopupActive ? "active" :"")" @onclick="() => { PopupActive = false; }" >
    <div class="p-6 weight-display-popup-content text-on-surface bg-surface-container rounded-card" @onclick:stopPropagation="true">
        <div class="weight-display-popup-body">
            <div class="weight-display-popup-row">
                <div class="weight-display-popup-label">Weight</div>
            </div>
            <div class="weight-display-popup-row">
                <InputNumber @bind-Value=EditorWeight step=2.5 />
            </div>
            <div class="weight-display-popup-row">
                <div class="weight-display-weight-increment-buttons-grid">
                    <AppButton Type=AppButtonType.OutlineSecondary OnClick=OnWeightDecrementClick><WeightFormat Kilograms="-Increment"  /></AppButton>
                    <AppButton Type=AppButtonType.OutlineSecondary OnClick=OnWeightIncrementClick>+<WeightFormat Kilograms="Increment" /></AppButton>
                </div>
            </div>
            <div class="weight-display-button-row">
                <AppButton OnClick=OnCloseClick Type=AppButtonType.Secondary>Close</AppButton>
                <AppButton OnClick=OnSaveClick>Save</AppButton>
            </div>
        </div>
    </div>
</div>

@code {


    [EditorRequired]
    [Parameter]
    public RecordedExercise Exercise { get; set; } = null!;

    [EditorRequired]
    [Parameter]
    public Action<decimal> UpdateWeightForExercise { get; set; } = null!;

    private decimal Increment => Exercise.Blueprint.KilogramsIncreaseOnSuccess == 0 ? 2.5m : Exercise.Blueprint.KilogramsIncreaseOnSuccess;

    private bool PopupActive { get; set; }

    private decimal EditorWeight { get; set; }

    private void OnOpenClick()
    {
        EditorWeight = Exercise.Kilograms;
        PopupActive = true;
    }

    private void OnCloseClick()
    {
        PopupActive = false;
    }

    private void OnSaveClick()
    {
        UpdateWeightForExercise(EditorWeight);
        PopupActive = false;
    }

    private void OnWeightIncrementClick()
    {
        EditorWeight += Increment;
    }

    private void OnWeightDecrementClick()
    {
        EditorWeight -= Increment;
    }
}
