@inject IJSRuntime JSRuntime

<md-filter-chip @ref="_filterChipRef" @onclick="() => OnFilterChipClicked()" selected="@Selected" label="@Label"></md-filter-chip>

@code {

    private ElementReference _filterChipRef;

    [Parameter] [EditorRequired] public string Label { get; set; } = null!;

    [Parameter] [EditorRequired] public bool Selected { get; set; }

    [Parameter] public EventCallback<bool> OnSelectedChange { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        await JSRuntime.InvokeVoidAsync("AppUtils.setSelected", _filterChipRef, Selected);
        await base.OnParametersSetAsync();
    }

    private async Task OnFilterChipClicked()
    {
        await Task.Yield();
        var selected = await JSRuntime.InvokeAsync<bool>("AppUtils.getSelected", _filterChipRef);
        await OnSelectedChange.InvokeAsync(selected);
    }

}