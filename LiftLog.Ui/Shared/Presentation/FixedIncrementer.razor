@typeparam T

<div @attributes="@AdditionalAttributes" class="@(AdditionalAttributes?.GetValueOrDefault("class"))">
    <div class="flex flex-col gap-2">
        <label class="text-lg">@Label</label>
        <div class="flex items-center ">
            <IconButton data-cy="fixed-decrement" Type="IconButtonType.Standard" OnClick="Decrement" Icon="remove"/>
            <span class="inline-block mx-2 text-center font-bold text-primary text-3xl">@Value</span>
            <IconButton data-cy="fixed-increment" Type="IconButtonType.Standard" OnClick="Increment" Icon="add"/>
        </div>
    </div>
</div>

@code
{
    [Parameter] [EditorRequired] public T Value { get; set; } = default!;

    [Parameter] [EditorRequired] public string Label { get; set; } = null!;

    [Parameter] [EditorRequired] public Action Increment { get; set; } = null!;

    [Parameter] [EditorRequired] public Action Decrement { get; set; } = null!;

    [Parameter(CaptureUnmatchedValues = true)]
    public Dictionary<string, object>? AdditionalAttributes { get; set; } = null!;
}
