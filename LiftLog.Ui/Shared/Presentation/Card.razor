@inject IJSRuntime JsRuntime

<div
    class="@(AdditionalAttributes?.GetValueOrDefault("class")) p-5 relative @(Border ? "border":"") @(IsHighlighted ? "border-primary bg-surface-container-high" : Border ? "border-outline-variant bg-surface-container-low" : "bg-surface-container-highest") rounded-card text-on-surface card"
    @onclick="HandleOnClick">
    @if (OnClick != null)
    {
        <md-ripple></md-ripple>
    }
    @ChildContent
</div>

@code {

    [Parameter(CaptureUnmatchedValues = true)]
    public Dictionary<string, object>? AdditionalAttributes { get; set; }

    [Parameter] public RenderFragment ChildContent { get; set; } = null!;

    [Parameter] public Action<MouseEventArgs>? OnClick { get; set; }

    [Parameter] public bool IsHighlighted { get; set; }
    
    [Parameter] public bool Border { get; set; } = true;

    private void HandleOnClick(MouseEventArgs args)
    {
        OnClick?.Invoke(args);
    }

}