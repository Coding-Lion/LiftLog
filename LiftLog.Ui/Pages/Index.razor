@using Fluxor;
@using LiftLog.Ui.Store.App;
@using LiftLog.Ui.Store.CurrentSession;
@using LiftLog.Ui.Store.Program;

@page "/"
@inherits Fluxor.Blazor.Web.Components.FluxorComponent

@inject IState<ProgramState> ProgramState
@inject IState<CurrentSessionState> CurrentSessionState
@inject IDispatcher Dispatcher
@inject NavigationManager NavigationManager

@if(ProgramState.Value.IsLoading)
{
    <div class="flex flex-col justify-center h-full gap-4 text-on-surface">
        <div><md-circular-progress aria-label="Ai planning progress" indeterminate four-color></md-circular-progress></div>
        <span>
            <p>Loading Sessions...</p>
        </span>
    </div>
} else if(ProgramState.Value.UpcomingSessions.Count == 0)
{
    <div class="flex flex-col gap-2">
        <Card class="flex flex-col gap-4">
            <div class="flex justify-between">
                <span class="text-lg">No plan created yet!</span>
                <md-icon>info</md-icon>
            </div>
            <div class="grid grid-cols-2 gap-2">
                <AppButton Type="AppButtonType.Secondary" OnClick=@(()=>NavigationManager.NavigateTo("/settings"))><md-icon slot="icon">add</md-icon>Create</AppButton>
                <AppButton OnClick=@(()=>NavigationManager.NavigateTo("/settings/program-list"))><md-icon slot="icon">assignment</md-icon>Use ours</AppButton>
            </div>
        </Card>
        <ProFeatureCard/>
    </div>
} else
{
    <CardList Items="ProgramState.Value.UpcomingSessions.IndexedTuples()" OnClick="x=>SelectSession(x.Item)" ShouldHighlight="session => session.Index == 0">
        <SessionSummary IsFilled="context.Item.IsStarted" Session="context.Item" ></SessionSummary>
    </CardList>
}

<Dialog @ref=replaceCurrentSesisonDialog>
    <span slot="headline">Replace current session</span>
    <span slot="content" class="block text-left">There is already a current session in progress, start a new one without saving?</span>
    <div slot="actions">
        <AppButton Type="AppButtonType.Text" OnClick=@(()=>replaceCurrentSesisonDialog?.Close())>Cancel</AppButton>
        <AppButton Type="AppButtonType.Text" OnClick=ReplaceSession>Replace</AppButton>
    </div>
</Dialog>

@code {

    private Dialog? replaceCurrentSesisonDialog;
    private Session? selectedSession;
    protected override async Task OnInitializedAsync()
    {
        Dispatcher.Dispatch(new SetPageTitleAction("Upcoming Workouts"));
        Dispatcher.Dispatch(new FetchUpcomingSessionsAction());
        await base.OnInitializedAsync();
    }

    private void SelectSession(Session session)
    {
            selectedSession = session;
        if(CurrentSessionState.Value.WorkoutSession is {IsStarted: true} && CurrentSessionState.Value.WorkoutSession != session)
        {
            replaceCurrentSesisonDialog?.Open();
        } else
        {
            ReplaceSession();
        }
    }

    private void ReplaceSession()
    {
        if(selectedSession is null)
        {
            return;
        }
        Dispatcher.Dispatch(new SetCurrentSessionAction(SessionTarget.WorkoutSession, selectedSession));
        NavigationManager.NavigateTo("/session");
    }
}
