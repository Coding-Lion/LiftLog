@using Fluxor
@using LiftLog.Ui.Store.App
@using LiftLog.Ui.Store.Program
@using LiftLog.Ui.Store.SessionEditor

@page "/settings/manage-workouts"
@inherits Fluxor.Blazor.Web.Components.FluxorComponent

@inject IState<ProgramState> ProgramState
@inject NavigationManager NavigationManager
@inject IDispatcher Dispatcher

<CardList Items="ProgramState.Value.SessionBlueprints.IndexedTuples()" OnClick="(item)=>SelectSession(item.Item, item.Index)">
    @{
        var session = context.Item;
        var index = context.Index;
    }
    <span class="text-xl">@session.Name</span>
    <AppButton Type="AppButtonType.OutlineSecondary" OnClick=@(() => MoveSessionUp(session))>‚¨ÜÔ∏è</AppButton>
    <AppButton Type="AppButtonType.OutlineSecondary" OnClick=@(() => MoveSessionDown(session))>‚¨áÔ∏è</AppButton>
    <AppButton Type="AppButtonType.OutlineSecondary" OnClick=@(() => RemoveSession(session))>üóëÔ∏è</AppButton>
    @foreach (var exercise in session.Exercises)
    {
        <div class="flex justify-between w-full">
            <span>@exercise.Name</span>
            <span> @exercise.Sets x @exercise.RepsPerSet</span>
        </div>
    }
</CardList>

<div class="flex justify-center mt-2">
    <AppButton Type="AppButtonType.Primary" OnClick="AddSession">Add Session</AppButton>
</div>

@code {

    void MoveSessionUp(SessionBlueprint sessionBlueprint) => Dispatcher.Dispatch(new MoveSessionBlueprintUpInProgramAction(sessionBlueprint));

    void MoveSessionDown(SessionBlueprint sessionBlueprint) => Dispatcher.Dispatch(new MoveSessionBlueprintDownInProgramAction(sessionBlueprint));

    void RemoveSession(SessionBlueprint sessionBlueprint) => Dispatcher.Dispatch(new RemoveSessionFromProgramAction(sessionBlueprint));

    void BackToSettings() => NavigationManager.NavigateTo("/settings");

    void SelectSession(SessionBlueprint sessionBlueprint, int index)
    {
        Dispatcher.Dispatch(new SetEditingSessionAction(sessionBlueprint));
        NavigationManager.NavigateTo($"/settings/manage-workouts/manage-session/{index}");
    }

    void AddSession() => Dispatcher.Dispatch(
        new AddProgramSessionAction(
            new SessionBlueprint($"Session {ProgramState.Value.SessionBlueprints.Count + 1}", new ImmutableListSequence<ExerciseBlueprint>())));

    protected override void OnInitialized()
    {
        Dispatcher.Dispatch(new SetPageTitleAction("Manage Workouts"));
        base.OnInitialized();
    }
}
