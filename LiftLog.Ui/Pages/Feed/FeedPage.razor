@using Fluxor;

@page "/feed"

@inject IState<FeedState> FeedState
@inject NavigationManager NavigationManager
@inject IDispatcher Dispatcher

@inherits Fluxor.Blazor.Web.Components.FluxorComponent

@if(FeedState.Value.Identity is null)
{
    <Card IsHighlighted=true>
        <div class="flex flex-col gap-2">
            <h2 class="text-xl self-start">Start publishing to your feed</h2>
            <p class="self-start text-left">You're not currently publishing your workouts for your friends to see</p>
            <AppButton class="self-end" Type=AppButtonType.Text OnClick=NavigateToCreateFeedIdentity >Start</AppButton>
        </div>
    </Card>
}else {
    <div class="flex justify-end">
        <AppButton Type=AppButtonType.Text OnClick=NavigateToCreateFeedIdentity >Your details</AppButton>
    </div>
}

<VirtualizedCardList Items=@(FeedState.Value.Feed.Select(x=>(Item: x, User: FeedState.Value.Users.GetValueOrDefault(x.UserId))).Where(x=>x.User is not null).ToList())>
    <FeedItemCardContent Item=context.Item User=@(context.User) />
</VirtualizedCardList>


@code
{
    protected override void OnInitialized()
    {
        Dispatcher.Dispatch(new SetPageTitleAction("Feed"));
        Dispatcher.Dispatch(new SetBackNavigationUrlAction(null));
        Dispatcher.Dispatch(new FetchSessionFeedItemsAction());
        base.OnInitialized();
    }

    protected void NavigateToCreateFeedIdentity()
    {
        NavigationManager.NavigateTo("/feed/create-identity");
    }
}
