
@using Fluxor
@using LiftLog.Ui.Services
@using LiftLog.Ui.Store.App
@using LiftLog.Ui.Store.Program
@using LiftLog.Ui.Store.Settings
@using System.Text.Json

@page "/settings/ai-planner"
@inherits Fluxor.Blazor.Web.Components.FluxorComponent

@inject NavigationManager NavigationManager
@inject IDispatcher Dispatcher
@inject IState<SettingsState> SettingsState

@if(SettingsState.Value.IsGeneratingAiPlan){
    <md-circular-progress aria-label="Ai planning progress" indeterminate four-color></md-circular-progress>
} else if(SettingsState.Value.AiPlan != null)
{
    <p class="text-on-surface">@SettingsState.Value.AiPlan.Description</p>
    <CardList Items="SettingsState.Value.AiPlan.Sessions">
        <SessionBlueprintSummary SessionBlueprint="context" />
    </CardList>
    <div class="flex justify-around mt-2">
        <AppButton OnClick="()=>Dispatcher.Dispatch(new SetAiPlanAction(null))" ><md-icon slot="icon">close</md-icon>Cancel</AppButton>
        <AppButton OnClick="()=>Dispatcher.Dispatch(new GenerateAiPlanAction(SettingsState.Value.AiWorkoutAttributes!))" ><md-icon slot="icon">refresh</md-icon>Regenerate</AppButton>
        <AppButton OnClick="()=>AcceptAiPlan(SettingsState.Value.AiPlan)" ><md-icon slot="icon">done</md-icon>Accept</AppButton>
    </div>
} else if( SettingsState.Value.AiPlanError != null)
{
    <div class="flex flex-col gap-2">
        <p class="text-on-surface">@SettingsState.Value.AiPlanError</p>
        <div class="flex justify-around">
            <AppButton OnClick="()=>Dispatcher.Dispatch(new GenerateAiPlanAction(SettingsState.Value.AiWorkoutAttributes!))" ><md-icon slot="icon">refresh</md-icon>Retry</AppButton>
        </div>
    </div>
}else
{
    <AiWorkoutWalkthrough OnAttributesSelected="attributes=>Dispatcher.Dispatch(new GenerateAiPlanAction(attributes))"></AiWorkoutWalkthrough>
}

@code{
    protected override void OnInitialized()
    {
        Dispatcher.Dispatch(new SetPageTitleAction("AI Planner"));
        base.OnInitialized();
    }

    private void AcceptAiPlan(AiWorkoutPlan plan){
        Dispatcher.Dispatch(new SetProgramSessionsAction(plan.Sessions));
        Dispatcher.Dispatch(new SetAiPlanAction(null));
        NavigationManager.NavigateTo("/");
    }
}
