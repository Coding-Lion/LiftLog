@page "/settings"
@using Fluxor
@using LiftLog.Ui.Services
@using LiftLog.Ui.Store.App
@using LiftLog.Ui.Store.Settings

@inherits Fluxor.Blazor.Web.Components.FluxorComponent

@inject NavigationManager NavigationManager
@inject IDispatcher Dispatcher
@inject IAppPurchaseService AppPurchaseService
@inject IState<AppState> AppState
@inject NavigationManager NavigationManager

<div class="flex flex-col gap-2">
    <Card class="flex flex-col gap-4">
        <div class="flex justify-between">
            <span class="text-lg">Data Management</span>
            <md-icon>description</md-icon>
        </div>
        <div class="flex justify-between">
            <AppButton OnClick="OpenImportPopup" Type="AppButtonType.OutlineSecondary">
                <md-icon slot="icon">download</md-icon>Import data
            </AppButton>
            <AppButton OnClick="ExportData" Type="AppButtonType.OutlineSecondary">
                <md-icon slot="icon">upload</md-icon>Export data
            </AppButton>
        </div>
        <AppButton OnClick="NavigateToManage" >
            <md-icon slot="icon">construction</md-icon>
            Manage workouts
        </AppButton>
        <AppButton Type=AppButtonType.Secondary OnClick="NavigateToProgramList" >
            <md-icon slot="icon">assignment</md-icon>
            Select a plan
        </AppButton>
    </Card>
    <ProFeatureCard/>
</div>

<Dialog @ref="importPopup">
    <span slot="headline">Paste Export Below</span>
    <InputTextArea slot="content" @bind-Value="ImportJson"/>
    <div slot="actions">
        <AppButton Type="AppButtonType.Text" OnClick="CloseImportPopup">Close</AppButton>
        <AppButton Type="AppButtonType.Text" OnClick="ImportData">Import</AppButton>
    </div>
</Dialog>



@code {
    private string ImportJson { get; set; } = "";

    private Dialog? importPopup;

    protected override void OnInitialized()
    {
        Dispatcher.Dispatch(new SetPageTitleAction("Settings"));
        base.OnInitialized();
    }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }


    private void NavigateToManage()
    {
        NavigationManager.NavigateTo("/settings/manage-workouts");
    }
    private void NavigateToProgramList()
    {
        NavigationManager.NavigateTo("/settings/program-list");
    }

    private void OpenImportPopup()
    {
        importPopup?.Open();
    }

    private void CloseImportPopup()
    {
        importPopup?.Close();
        ImportJson = "";
    }

    private void ImportData()
    {
        if (ImportJson != "")
        {
            Dispatcher.Dispatch(new ImportDataAction(ImportJson));
            CloseImportPopup();
        }

    }

    private void ExportData() => Dispatcher.Dispatch(new ExportDataAction());

}
